apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.20.0 (f3d54d784)
  labels:
    io.kompose.service: data
  name: data
spec:
  selector:
    matchLabels:
      io.kompose.service: data
  replicas: 1
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml
        kompose.version: 1.20.0 (f3d54d784)
      labels:
        io.kompose.network/myapp: "true"
        io.kompose.service: data
    spec:
      containers:
      - image: dinarakineyeva/quotes-data:v1
        name: db
        ports:
        - containerPort: 3306
        env:
        - name: MYSQL_ALLOW_EMPTY_PASSWORD
          valueFrom:
              secretKeyRef:
                name: data-secret
                key: MYSQL_ALLOW_EMPTY_PASSWORD
        - name: MYSQL_DATABASE
          valueFrom:
              secretKeyRef:
                name: data-secret
                key: MYSQL_DATABASE
        - name: MYSQL_PASSWORD
          valueFrom:
              secretKeyRef:
                name: data-secret
                key: MYSQL_PASSWORD
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
              secretKeyRef:
                name: data-secret
                key: MYSQL_ROOT_PASSWORD
        volumeMounts:
        - mountPath: "/var/lib/mysql"
          name: dinara-claim
          subPath: mysql
      volumes:
        - name: dinara-claim
          persistentVolumeClaim:
            claimName: dinara-claim
      restartPolicy: Always
status: {}
